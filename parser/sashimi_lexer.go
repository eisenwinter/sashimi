// Code generated from Sashimi.g4 by ANTLR 4.8. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 21, 178,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3,
	4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3,
	7, 3, 8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 11,
	3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 13, 3,
	13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13,
	3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3,
	13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13,
	3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 5, 13, 121, 10,
	13, 3, 14, 6, 14, 124, 10, 14, 13, 14, 14, 14, 125, 3, 15, 6, 15, 129,
	10, 15, 13, 15, 14, 15, 130, 3, 16, 6, 16, 134, 10, 16, 13, 16, 14, 16,
	135, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3,
	18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 5, 18,
	157, 10, 18, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3,
	19, 3, 19, 3, 19, 5, 19, 170, 10, 19, 3, 20, 6, 20, 173, 10, 20, 13, 20,
	14, 20, 174, 3, 20, 3, 20, 2, 2, 21, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13,
	8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17,
	33, 18, 35, 19, 37, 20, 39, 21, 3, 2, 4, 3, 2, 99, 124, 5, 2, 11, 12, 15,
	15, 34, 34, 2, 188, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2,
	2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2,
	2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3,
	2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31,
	3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2,
	39, 3, 2, 2, 2, 3, 41, 3, 2, 2, 2, 5, 43, 3, 2, 2, 2, 7, 45, 3, 2, 2, 2,
	9, 47, 3, 2, 2, 2, 11, 49, 3, 2, 2, 2, 13, 51, 3, 2, 2, 2, 15, 59, 3, 2,
	2, 2, 17, 62, 3, 2, 2, 2, 19, 65, 3, 2, 2, 2, 21, 67, 3, 2, 2, 2, 23, 70,
	3, 2, 2, 2, 25, 120, 3, 2, 2, 2, 27, 123, 3, 2, 2, 2, 29, 128, 3, 2, 2,
	2, 31, 133, 3, 2, 2, 2, 33, 137, 3, 2, 2, 2, 35, 156, 3, 2, 2, 2, 37, 169,
	3, 2, 2, 2, 39, 172, 3, 2, 2, 2, 41, 42, 7, 42, 2, 2, 42, 4, 3, 2, 2, 2,
	43, 44, 7, 36, 2, 2, 44, 6, 3, 2, 2, 2, 45, 46, 7, 43, 2, 2, 46, 8, 3,
	2, 2, 2, 47, 48, 7, 93, 2, 2, 48, 10, 3, 2, 2, 2, 49, 50, 7, 95, 2, 2,
	50, 12, 3, 2, 2, 2, 51, 52, 7, 110, 2, 2, 52, 53, 7, 107, 2, 2, 53, 54,
	7, 117, 2, 2, 54, 55, 7, 118, 2, 2, 55, 56, 7, 34, 2, 2, 56, 57, 7, 113,
	2, 2, 57, 58, 7, 104, 2, 2, 58, 14, 3, 2, 2, 2, 59, 60, 7, 99, 2, 2, 60,
	61, 7, 117, 2, 2, 61, 16, 3, 2, 2, 2, 62, 63, 7, 107, 2, 2, 63, 64, 7,
	117, 2, 2, 64, 18, 3, 2, 2, 2, 65, 66, 7, 47, 2, 2, 66, 20, 3, 2, 2, 2,
	67, 68, 7, 113, 2, 2, 68, 69, 7, 104, 2, 2, 69, 22, 3, 2, 2, 2, 70, 71,
	7, 117, 2, 2, 71, 72, 7, 99, 2, 2, 72, 73, 7, 117, 2, 2, 73, 74, 7, 106,
	2, 2, 74, 75, 7, 107, 2, 2, 75, 76, 7, 111, 2, 2, 76, 77, 7, 107, 2, 2,
	77, 78, 7, 60, 2, 2, 78, 24, 3, 2, 2, 2, 79, 80, 7, 111, 2, 2, 80, 81,
	7, 99, 2, 2, 81, 82, 7, 116, 2, 2, 82, 83, 7, 109, 2, 2, 83, 84, 7, 102,
	2, 2, 84, 85, 7, 113, 2, 2, 85, 86, 7, 121, 2, 2, 86, 121, 7, 112, 2, 2,
	87, 88, 7, 102, 2, 2, 88, 89, 7, 107, 2, 2, 89, 90, 7, 117, 2, 2, 90, 91,
	7, 114, 2, 2, 91, 92, 7, 110, 2, 2, 92, 93, 7, 99, 2, 2, 93, 121, 7, 123,
	2, 2, 94, 95, 7, 116, 2, 2, 95, 96, 7, 103, 2, 2, 96, 97, 7, 114, 2, 2,
	97, 98, 7, 103, 2, 2, 98, 99, 7, 99, 2, 2, 99, 121, 7, 118, 2, 2, 100,
	101, 7, 110, 2, 2, 101, 102, 7, 99, 2, 2, 102, 103, 7, 123, 2, 2, 103,
	104, 7, 113, 2, 2, 104, 105, 7, 119, 2, 2, 105, 106, 7, 118, 2, 2, 106,
	107, 7, 97, 2, 2, 107, 108, 7, 117, 2, 2, 108, 109, 7, 103, 2, 2, 109,
	110, 7, 101, 2, 2, 110, 111, 7, 118, 2, 2, 111, 112, 7, 107, 2, 2, 112,
	113, 7, 113, 2, 2, 113, 121, 7, 112, 2, 2, 114, 115, 7, 103, 2, 2, 115,
	116, 7, 112, 2, 2, 116, 117, 7, 118, 2, 2, 117, 118, 7, 107, 2, 2, 118,
	119, 7, 118, 2, 2, 119, 121, 7, 123, 2, 2, 120, 79, 3, 2, 2, 2, 120, 87,
	3, 2, 2, 2, 120, 94, 3, 2, 2, 2, 120, 100, 3, 2, 2, 2, 120, 114, 3, 2,
	2, 2, 121, 26, 3, 2, 2, 2, 122, 124, 9, 2, 2, 2, 123, 122, 3, 2, 2, 2,
	124, 125, 3, 2, 2, 2, 125, 123, 3, 2, 2, 2, 125, 126, 3, 2, 2, 2, 126,
	28, 3, 2, 2, 2, 127, 129, 9, 2, 2, 2, 128, 127, 3, 2, 2, 2, 129, 130, 3,
	2, 2, 2, 130, 128, 3, 2, 2, 2, 130, 131, 3, 2, 2, 2, 131, 30, 3, 2, 2,
	2, 132, 134, 9, 2, 2, 2, 133, 132, 3, 2, 2, 2, 134, 135, 3, 2, 2, 2, 135,
	133, 3, 2, 2, 2, 135, 136, 3, 2, 2, 2, 136, 32, 3, 2, 2, 2, 137, 138, 7,
	46, 2, 2, 138, 34, 3, 2, 2, 2, 139, 140, 7, 118, 2, 2, 140, 141, 7, 103,
	2, 2, 141, 142, 7, 122, 2, 2, 142, 157, 7, 118, 2, 2, 143, 144, 7, 114,
	2, 2, 144, 145, 7, 107, 2, 2, 145, 146, 7, 101, 2, 2, 146, 147, 7, 118,
	2, 2, 147, 148, 7, 119, 2, 2, 148, 149, 7, 116, 2, 2, 149, 157, 7, 103,
	2, 2, 150, 151, 7, 112, 2, 2, 151, 152, 7, 119, 2, 2, 152, 153, 7, 111,
	2, 2, 153, 154, 7, 100, 2, 2, 154, 155, 7, 103, 2, 2, 155, 157, 7, 116,
	2, 2, 156, 139, 3, 2, 2, 2, 156, 143, 3, 2, 2, 2, 156, 150, 3, 2, 2, 2,
	157, 36, 3, 2, 2, 2, 158, 159, 7, 111, 2, 2, 159, 160, 7, 99, 2, 2, 160,
	161, 7, 112, 2, 2, 161, 162, 7, 123, 2, 2, 162, 163, 7, 81, 2, 2, 163,
	170, 7, 104, 2, 2, 164, 165, 7, 113, 2, 2, 165, 166, 7, 112, 2, 2, 166,
	167, 7, 103, 2, 2, 167, 168, 7, 81, 2, 2, 168, 170, 7, 104, 2, 2, 169,
	158, 3, 2, 2, 2, 169, 164, 3, 2, 2, 2, 170, 38, 3, 2, 2, 2, 171, 173, 9,
	3, 2, 2, 172, 171, 3, 2, 2, 2, 173, 174, 3, 2, 2, 2, 174, 172, 3, 2, 2,
	2, 174, 175, 3, 2, 2, 2, 175, 176, 3, 2, 2, 2, 176, 177, 8, 20, 2, 2, 177,
	40, 3, 2, 2, 2, 10, 2, 120, 125, 130, 135, 156, 169, 174, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'('", "'\"'", "')'", "'['", "']'", "'list of'", "'as'", "'is'", "'-'",
	"'of'", "'sashimi:'", "", "", "", "", "','",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "DIRECTIVE", "COMMAND", "IDENT",
	"ALIAS", "CONSTRAINT", "SEPERATOR", "TYPE", "UNION", "WS",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "DIRECTIVE", "COMMAND", "IDENT", "ALIAS", "CONSTRAINT", "SEPERATOR",
	"TYPE", "UNION", "WS",
}

type SashimiLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewSashimiLexer(input antlr.CharStream) *SashimiLexer {

	l := new(SashimiLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Sashimi.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// SashimiLexer tokens.
const (
	SashimiLexerT__0       = 1
	SashimiLexerT__1       = 2
	SashimiLexerT__2       = 3
	SashimiLexerT__3       = 4
	SashimiLexerT__4       = 5
	SashimiLexerT__5       = 6
	SashimiLexerT__6       = 7
	SashimiLexerT__7       = 8
	SashimiLexerT__8       = 9
	SashimiLexerT__9       = 10
	SashimiLexerDIRECTIVE  = 11
	SashimiLexerCOMMAND    = 12
	SashimiLexerIDENT      = 13
	SashimiLexerALIAS      = 14
	SashimiLexerCONSTRAINT = 15
	SashimiLexerSEPERATOR  = 16
	SashimiLexerTYPE       = 17
	SashimiLexerUNION      = 18
	SashimiLexerWS         = 19
)
